{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["md","Remarkable","html","breaks","langPrefix","Sider","Layout","Header","Content","Footer","InputGroup","Input","Group","ButtonGroup","Button","$$","id","document","getElementById","getElementsByTagName","innerHTML","script","createElement","setAttribute","appendChild","islock","input_value","is_show_guide","show_guide","value","renderer","is_left_hide","source","target","replace","tagName","toLowerCase","window","MathJax","Hub","Queue","preview_math","show_table","style","display","excel2table","data","rows","match","length","str_arr","split","pop","columns","this","data_format","str","padEnd","alert","simple_format","lc","latex_format_maple","is_coeff","discrete_latex_format_maple","set_input_format_latex","is_discrete","old_code","set_input_format_szce","eqs","map","eq","eq1","test","is_match","V_ij_x","slice","move_V_ij_x_2_left","move_V_ij_2_left","format_szce","format_szce_relation","forEach","matchs","lhs","mt","DT_gauge","DT_coe","latex2maple","type","includes","d","arr","c","i","re1","RegExp","re2","re3","JSON","stringify","typora","file","files","name","reader","FileReader","onload","result","maths","math","render","readAsText","body","addEventListener","minWidth","maxWidth","width","Table","state","onTextChange","event","Math","min","parseInt","setState","eleOnInput","eleOnBlur","eleOnFocus","create_inputs","input_rows","input_columns","j","push","flex","className","margin","onInput","onBlur","onFocus","random","flexDirection","n","max","table2matrix","eles","getElementsByClassName","ele","innerText","close_table","styles","table","position","top","left","right","background","float","padding","textAlign","gutter","span","addonBefore","onChange","onClick","React","Component","diaplay","overflow","header","height","backgroundColor","overflowY","lineHeight","content","button","borderRadius","textarea","outline","border","output","userSelect","footer","tip","zIndex","btn_name","btn_click","btn_type","beforeUpload","icon","UploadOutlined","btn_arr","dashed","href","documentElement","clientHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.ffe8860b.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport {\n  Button,\n  Layout,\n  Divider,\n  Input,\n  Col,\n  Row,\n  Card,\n  Upload\n} from 'antd';\nimport {\n  UploadOutlined\n} from '@ant-design/icons';\nimport {\n  Remarkable\n} from 'remarkable';\n\nconst md = new Remarkable({\n  html: true, // Enable HTML tags in source\n  breaks: false, // Convert '\\n' in paragraphs into <br>\n  langPrefix: 'language-', // CSS language prefix for fenced blocks\n});\n\nconst {\n  Sider,\n  Header,\n  Content,\n  Footer\n} = Layout;\nconst InputGroup = Input.Group;\nconst ButtonGroup = Button.Group;\n\n(function() {\n  document.getElementsByTagName('head')[0].innerHTML += `\n    <script type=\"text/x-mathjax-config\">\n        MathJax.Hub.Config({\n            messageStyle: 'none',\n            tex2jax: {inlineMath: [['$','$']], preview: 'none'},\n            jax: [\"input/TeX\", \"output/SVG\"],\n            TeX: { equationNumbers: { }}\n        });\n    </script>\n  `\n  var script = document.createElement('script');\n  script.setAttribute('type', \"text/javascript\");\n  script.setAttribute('src', \"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=default\");\n  document.getElementsByTagName('head')[0].appendChild(script);\n})();\n\nfunction $$(id) {\n  return document.getElementById(id);\n}\n\nvar islock = false;\n\n// 使用说明\nconst TEXT =\n  `\n    功能: \n      可以实时预览数学公式(先输入数学环境)，以及excel数据\n      或者文件中复制的列表转列表，创建列表和矩阵。 \n    \n    excel数据转列表：  \n      输入框清空，将excel数据复制到输入框，点击转换按钮\n      即可. 要求不同行要换行，数据中无空格, \n      不同数据间有空格(或tab键)隔开.\n    \n    下面maple相关的功能均与方程族推导相关，其余问题未必可用\n    \n    连续公式格式化：\n      格式化maple生成的latex代码，去除冗余\n      将latex代码粘贴在输入框，点击格式化即可。\n    \n    展示系数格式化：\n      主要针对无穷展开同次幂系数。\n    \n    szce格式化：\n      连续静态零曲率方程格式化，并且输出各未知量的依赖关系。\n    \n    离散szce格式化：\n      离散静态零曲率方程格式化，并且输出各未知量的依赖关系。\n    \n    DT-gT: \n      指将gauge变换T代入T_x+TU=U_hatT.\n    \n    DT-coe:\n      指将gauge变换T代入T_x+TU=U_hatT后比较各式中lambda\n      各次幂系数所得等式\n\n    latex2maple:\n      将mathpix-snipping-tool通过图片识别生成的矩阵的latex代码\n      转化成maple中矩阵输入表达式。\n      目前主要支持以下环境：\n        矩阵：如\n          \\\\begin{array}{cc}\n            u     & 1 \\\\\n            \\\\lambda  & v\n          \\\\end{array}\n        多行：如\n          \\\\begin{aligned}{cc}\n            &u + 1 \\\\\n            &\\\\lambda + v\n          \\\\end{aligned}\n        单个公式：如\n          x^2 + y^2\n    typora:\n      读取typora生成的markdown文档并解析。\n      目前仅支持标题，数学公式解析。\n\n    \n    双击： 左侧收起/恢复，\n    \n    注： 1. 个人用，不具有普适性，不保证完全正确。上面是未格式化的结果，\n        是正确的。\n         2. 仅支持latex数学公式，其它命令不支持。\n    `\nvar input_value = '';\nvar is_show_guide = true;\n\nfunction show_guide() {\n  if (is_show_guide) {\n    input_value = $$('input').value;\n    $$('input').value = TEXT;\n  } else {\n    $$('input').value = input_value;\n    renderer($$('input'), $$('output'));\n  }\n  is_show_guide = !is_show_guide;\n}\n\n// 双击左侧输入区收起\nvar is_left_hide = true;\ndocument.body.addEventListener('dblclick', function() {\n  if (is_left_hide) {\n    $$('left').style.display = 'none';\n    $$('sider').style.minWidth = '99%';\n    $$('sider').style.maxWidth = '99%';\n    $$('sider').style.width = '99%';\n  } else {\n    $$('left').style.display = 'block';\n    $$('sider').style.minWidth = '50%';\n    $$('sider').style.maxWidth = '50%';\n    $$('sider').style.width = '50%';\n  }\n  is_left_hide = !is_left_hide;\n});\n\n// !!!!!!!!!!!!!!!!!!!!!此处是关键， https://www.jianshu.com/p/20f137e2b8c9\nfunction renderer(source, target) {\n  if (islock) return;\n  islock = true;\n  let value = source.value.replace(/(beta|gamma|eta|zeta|xi|alpha|delta)/g, '$1 ');\n  $$('buffer').innerHTML = value.replace(/\\n/g, \"<br />\");\n  if (source.tagName.toLowerCase() === 'input') {\n    $$('buffer').innerHTML = '$' + $$('buffer').innerHTML + '$';\n  }\n  window.MathJax.Hub.Queue(['Typeset', window.MathJax.Hub, $$('buffer')], [preview_math, target]);\n}\n\nfunction preview_math(target) {\n  islock = false;\n  target.innerHTML = $$('buffer').innerHTML;\n}\n\nfunction show_table() {\n  $$('table').style.display = 'block';\n  $$('tip').style.display = 'block';\n}\n\n// 根据输入区字符串生成表格\nfunction excel2table() {\n  let data = $$('input').value;\n  if (data === '') return;\n  // 判断最后一个字符是否为换行符，以确定行数。\n  let rows = data.match(/\\r\\n|\\n/g).length + 1;\n  let str_arr = data.split(/\\s+|\\t|\\n|\\r\\n/g);\n  if (data[data.length - 1] === '\\n') {\n    rows -= 1;\n    str_arr.pop();\n  }\n  let columns = str_arr.length / rows;\n  if (columns % 1 !== 0) {\n    alert('数据不规范');\n    return;\n  }\n  data = this.data_format(str_arr);\n  let str = ''.padEnd(2 * columns, '|c');\n  $$('input').value += ('\\r\\n\\ \\r\\n\\\\begin{tabular}{' + str + '|}\\r\\n\\\\hline\\r\\n' + data + '\\\\hline\\r\\n\\\\end{tabular}');\n}\n\n\nfunction simple_format() {\n  let lc = $$('input').value;\n  lc = lc.replace(/\\n/g, '');\n  lc = lc.replace(/{\\\\it(.*?)}/g, '$1');\n  lc = lc.replace(/\\\\noalign{\\\\medskip}/g, ' ');\n  lc = lc.replace(/(\\\\!)/g, ' ');\n  lc = lc.replace(/(\\s,)/g, '\\\\\\\\ ');\n  lc = '<hr><hr>\\r\\n\\r\\n 原结果：\\r\\n$$' + lc + '$$<hr>';\n  return lc;\n}\n\nfunction latex_format_maple(is_coeff) {\n  // is_coeff: 是否为无穷展式系数\n  let lc = $$('input').value;\n  // 去除换行符\n  lc = lc.replace(/\\n/g, '');\n  lc = lc.replace(/,0,/g, ',');\n  // 修正(偏)导数\n  // 对常数求导\n  // {\\frac {\\rm d}{{\\rm d}x}} \\left( 1 \\right)\n  lc = lc.replace(/[+-]?{\\\\frac\\s{\\\\rm\\sd}{{\\\\rm\\sd}\\w}}\\s\\\\left\\(\\s[0-9]+\\s\\\\right\\)/g, ' ');\n\n  // 一阶与高阶偏导数， \n  // {\\frac {\\partial }{\\partial x}} \\left( w{\\it b31} \\left( x,t \\right) \\right)\n  lc = lc.replace(/{\\\\frac {\\\\partial }{\\\\partial (\\w)}} \\\\left\\( (.*?) (\\\\left\\( x,t \\\\right\\).*?)\\\\right\\)/g, '($2 $3)_{$1}');\n  // lc = lc.replace(/{\\\\frac\\s{\\\\partial\\s\\^{(\\d+)}}{\\\\partial\\s{(\\w)}\\^{\\d+}}}(.*?)\\s(\\\\left\\(.*?\\\\right\\))/g, '$3_{$1$2} $4');\n\n  // 一阶与高阶偏导数\n  // {\\frac {\\partial }{\\partial x}} { w{\\it b31} } \\left( x,t \\right)\n  lc = lc.replace(/{\\\\frac\\s{\\\\partial\\s}{\\\\partial\\s(\\w)}}(.*?)\\s(\\\\left\\(.*?\\\\right\\))/g, '$2_{$1} $3');\n  lc = lc.replace(/{\\\\frac\\s{\\\\partial\\s\\^{(\\d+)}}{\\\\partial\\s{(\\w)}\\^{\\d+}}}(.*?)\\s(\\\\left\\(.*?\\\\right\\))/g, '$3_{$1$2} $4');\n\n  // 一阶与高阶偏导数\n  lc = lc.replace(/{\\\\frac\\s{\\\\rm d}{{\\\\rm d}(\\w)}}(.*?)\\s(\\\\left\\(.*?\\\\right\\))/g, '$2_{$1} $3');\n  lc = lc.replace(/{\\\\frac\\s{{\\\\rm d}\\^{(\\d+)}}{{\\\\rm d}{(\\w)}\\^{\\d+}}}(.*?)\\s(\\\\left\\(.*?\\\\right\\))/g, '$3_{$1$2} $4');\n  lc = lc.replace(/{\\\\frac\\s{\\\\partial\\s\\^{\\d}}{\\\\partial\\s(\\w)\\\\partial\\s(\\w)}}(.*?)\\s(\\\\left\\(.*?\\\\right\\))/g, '$3_{$1$2} $4');\n\n  // 一阶或高阶混合偏导数\n  lc = lc.replace(/{\\\\frac\\s{\\\\partial\\s\\^{\\d+}}{\\\\partial\\s(\\w)\\\\partial\\s{(\\w)}\\^{(\\d+)}}}(.*?)\\s(\\\\left\\(.*?\\\\right\\))/g, '$4_{$1$3$2} $5');\n  lc = lc.replace(/{\\\\frac\\s{\\\\partial\\s\\^{\\d+}}{\\\\partial\\s{(\\w)}\\^{(\\d+)}\\\\partial\\s(\\w)}}(.*?)\\s(\\\\left\\(.*?\\\\right\\))/g, '$4_{$2$1$3} $5');\n  lc = lc.replace(/{\\\\frac\\s{\\\\partial\\s\\^{\\d+}}{\\\\partial\\s{(\\w)}\\^{(\\d+)}\\\\partial\\s{(\\w)}\\^{(\\d+)}}}(.*?)\\s(\\\\left\\(.*?\\\\right\\))/g, '$5_{$2$1$4$3} $6');\n\n  if (is_coeff === '1') {\n    // D_2(A)(0, x) --> A_{0, x}\n    lc = lc.replace(/D_{{\\d}}\\s+\\\\left\\(\\s+(\\w)\\s+\\\\right\\)\\s+\\\\left\\(\\s+(\\d),(\\w)\\s+\\\\right\\)/g, '$1_{$2,$3}');\n    // A(2, x) --> A_2.\n    lc = lc.replace(/(\\w)\\s+\\\\left\\(\\s+(\\d),\\w\\s+\\\\right\\)/g, '$1_{$2}');\n    lc = lc.replace(/\\s,/g, ' =0, \\\\\\\\');\n  }\n  // Vij --> V_{ij}\n  lc = lc.replace(/([a-zA-Z]+)(\\d+)/g, '$1_{$2}');\n  // 删除(x), (x, t, ..)\n  lc = lc.replace(/\\\\left\\(\\s[a-z](,[a-z]){0,}\\s\\\\right\\)/g, ' ');\n  // 冗余\n  lc = lc.replace(/{\\\\it(.*?)}/g, '$1');\n  lc = lc.replace(/\\\\noalign{\\\\medskip}/g, ' ');\n  lc = lc.replace(/(\\\\,|\\\\!)/g, ' ');\n  // {{i}} --> {i}.\n  lc = lc.replace(/{({\\w})}/g, '$1');\n  // (A_{x}) or (A) --> A_{x} or A.\n  lc = lc.replace(/\\\\left\\(\\s+(\\w(_{\\w+}|))\\s+\\\\right\\)\\s+([^\\^])/g, '$1 $3');\n  // (A_{x})^i or (A)^i --> A^i_{x} or A^i.   \n  lc = lc.replace(/\\\\left\\(\\s+(\\w(_{\\w+}|))\\s+\\\\right\\)\\s+\\^({\\d+})/g, '$1^$3');\n  // V_{x}_{y} --> V_{x, y}\n  lc = lc.replace(/([a-zA-Z]+)_{(\\w+)}_{(\\w+)}/g, '$1_{$2,$3}');\n  lc = lc.replace(/\\s,/g, '\\t \\\\\\\\\\t ');\n  lc = lc.replace(/\\\\\\\\\\s+\\\\\\\\/g, '\\\\\\\\');\n  lc = lc.replace(/\\s{2,}/g, ' ');\n  return lc;\n}\n\nfunction discrete_latex_format_maple() {\n  let lc = $$('input').value;\n  lc = lc.replace(/\\n/g, \"\");\n  lc = lc.replace(/([a-zA-Z]+)(\\d+)/g, \"$1_{$2}\");\n  lc = lc.replace(/{\\\\it(.*?)}/g, \"$1\");\n  lc = lc.replace(/\\\\noalign{\\\\medskip}/g, \" \");\n  lc = lc.replace(/(\\\\,|\\\\!)/g, \" \");\n  lc = lc.replace(/\\s,/g, \"\\t \\\\\\\\\\t \");\n  lc = lc.replace(/\\s{2,}/g, \" \");\n  lc = lc.replace(/\\\\left\\(\\sn\\s\\\\right\\)/g, \"\");\n  lc = lc.replace(/\\\\left\\(\\sn([+-])1\\s\\\\right\\)/g, \"^{$1}\");\n  lc = lc.replace(/\\\\left\\(\\sn([+-])2\\s\\\\right\\)/g, \"^{$1$1}\");\n  lc = lc.replace(/\\\\left\\(\\sn([+-])3\\s\\\\right\\)/g, \"^{$1$1$1}\");\n  lc = lc.replace(/\\\\left\\(\\sn([+-])4\\s\\\\right\\)/g, \"^{$1$1$1$1}\");\n  lc = lc.replace(/\\\\left\\(\\sn([+-])5\\s\\\\right\\)/g, \"^{$1$1$1$1$1}\");\n  lc = lc.replace(/\\\\left\\(\\sn([+-])6\\s\\\\right\\)/g, \"^{$1$1$1$1$1$1}\");\n  lc = lc.replace(/\\\\left\\(\\sn([+-])7\\s\\\\right\\)/g, \"^{$1$1$1$1$1$1$1}\");\n  return lc;\n}\n\n\nfunction set_input_format_latex(is_coeff, is_discrete) {\n  let lc;\n  if (is_discrete === '1') {\n    lc = discrete_latex_format_maple();\n  } else {\n    lc = latex_format_maple(is_coeff);\n  }\n  let old_code = simple_format();\n  $$('input').value = old_code + ('\\r\\n\\r\\n\\r\\n转换结果：\\r\\n \\r\\n\\r\\n$' + lc + '$');\n  renderer($$('input'), $$('output'));\n}\n\nfunction set_input_format_szce(is_discrete) {\n  // szce(静态零曲率方程)格式化(n>2)\n  let lc;\n  if (is_discrete === '1') {\n    lc = discrete_latex_format_maple();\n  } else {\n    lc = latex_format_maple('0');\n  }\n  lc = lc.replace(/\\s/g, '');\n\n  lc = lc.replace(/.*?{array}{.*?}(.*)\\\\end.*/, '$1');\n  lc = lc.replace(/\\\\lambda/g, '\\\\lambda ');\n  lc = lc.replace(/\\\\\\\\/g, '&').split('&');\n  // 将导数项 V_{ij, x}，及 V_{ij}分别移到左端\n  let eqs;\n  if (is_discrete === '0') {\n    eqs = lc.map(eq => {\n      let eq1 = move_V_ij_x_2_left(eq),\n        eq2 = move_V_ij_2_left(eq1);\n      return [eq1, eq2];\n    })\n  } else {\n    eqs = lc.map(eq => [eq, move_V_ij_2_left(eq)]);\n  }\n\n  let format_szce = '',\n    format_szce_relation = '';\n  eqs.forEach(eq => {\n    format_szce += '&' + eq[0] + '=0,\\\\\\\\ \\r\\n';\n    format_szce_relation += eq[1];\n  })\n  format_szce = '\\\\begin{align}\\r\\n' + format_szce + '\\\\end{align}';\n  format_szce_relation = '\\\\begin{align}\\r\\n' + format_szce_relation + '\\\\end{align}';\n  let old_code = simple_format();\n  $$('input').value = old_code + '\\r\\n\\r\\n' + format_szce + '\\r\\n\\r\\n<hr><hr>' + '依赖关系:\\r\\n';\n  $$('input').value = $$('input').value + '$' + format_szce_relation + '$<hr><hr>';\n  renderer($$('input'), $$('output'));\n}\n\nfunction move_V_ij_x_2_left(eq) {\n  // 将 V_{ij, x}移到左端。\n  // 判断是否已经在左端\n  if (/^[^-+]*?\\w_\\{\\d\\d,\\w\\}/.test(eq)) return eq;\n  // 约去系数\n  // eq = eq.replace(/-?[^+-]*?\\\\left\\((.*?)\\\\right\\)/g, '$1');\n  if (eq[0] !== '-') {\n    eq = '+' + eq;\n  }\n  let is_match = eq.match(/[+-][^+-]*?\\w_\\{\\d\\d,\\w\\}[^+-]*?/),\n    V_ij_x = '';\n  if (is_match !== null) {\n    V_ij_x = is_match[0];\n    eq = eq.replace(is_match[0], '');\n  }\n  if (V_ij_x[0] === '+') {\n    V_ij_x = V_ij_x.slice(1);\n  }\n  return V_ij_x + eq;\n}\n\nfunction move_V_ij_2_left(eq) {\n  // szce各变量依赖关系, 主要是将 V_{ij}移到等式左端。\n  eq += ' ';\n  let matchs = eq.match(/(-|\\+)V_{\\d\\d}(?=(\\+|\\s|-))/g);\n  let lhs = '';\n  if (matchs) {\n    matchs.forEach(mt => {\n      lhs += '-' + mt\n      eq = eq.replace(mt, '');\n    })\n  }\n  eq = '&' + lhs + '=' + eq + ',\\\\\\\\ \\r\\n';\n  eq = eq.replace(/--/g, '+');\n  eq = eq.replace(/-\\+/g, '-');\n  if (eq[1] === '+') {\n    eq = '&' + eq.slice(2, eq.length);\n  } else if (eq[1] === '=') {\n    eq = '';\n  }\n  return eq;\n}\n\n//  指将gauge变换T代入T_x+TU=U_hatT.\nfunction DT_gauge() {\n  let lc = latex_format_maple('0');\n  lc = lc.replace(/H(\\w)/g, '\\\\hat{$1}');\n  lc = lc.replace(/\\s/g, '');\n  lc = lc.replace(/&/g, '=0,\\\\\\\\&');\n  lc = lc.replace(/\\\\\\\\([^&])/g, '=0,\\\\\\\\&$1');\n  lc = lc.replace(/\\\\left\\[\\\\begin{array}{\\w+}(.*?)\\\\end{array}\\\\right\\]/, '\\\\begin{align}& $1=0.\\\\end{align}');\n  lc = lc.replace(/\\\\lambda/g, '\\\\lambda ');\n\n  let old_code = simple_format();\n  $$('input').value = old_code + ('\\r\\n\\r\\n\\r\\n$' + lc + '$');\n  renderer($$('input'), $$('output'));\n}\n\n//  指将gauge变换T代入T_x+TU=U_hatT后比较各式中lambda\n//  各次幂系数所得等式\nfunction DT_coe() {\n  let lc = latex_format_maple('0');\n  lc = lc.replace(/H(\\w)/g, '\\\\hat{$1}');\n\n  lc = lc.slice(1, lc.length - 1);\n  lc = lc.replace(/\\\\\\\\/g, '=0, \\\\\\\\\\r\\n&');\n  lc = lc.replace(/((\\s|\\+|-))_{x}/g, '$1 0');\n  lc = `\\\\begin{align}&${lc}=0.\\\\end{align}`;\n\n  let old_code = simple_format();\n  $$('input').value = old_code + ('\\r\\n\\r\\n\\r\\n$' + lc + '$');\n  renderer($$('input'), $$('output'));\n}\n\nfunction latex2maple() {\n  // lc: latex code of align/array/$$, created by mathpix-snipping-tool.exe\n  // return: maple expression。\n  let lc = $$('input').value.replace(/\\\\\\\\/g, '');\n  let type = '';\n  if( lc.includes('align') ) {\n    lc = lc.split(/\\n/g).slice(1, -1).map( d => d.split(/&/g).slice(1) );\n    type = 'array';\n  } else if( lc.includes('array') ) {\n    lc = lc.split(/\\n/g).slice(1, -1).map( d => d.split(/&/g) );\n    type = 'matrix';\n  } else { // lc of single expression\n    lc = [[lc]];\n  }\n      \n  lc = lc.map( arr => arr.map( c => {\n    c = c.replace(/\\\\mathrm{([a-zA-Z])}/g, '$1'); // \n    // x^{3} --> x^3\n    c = c.replace(/\\^{(\\d+)}/g, '^$1 ');\n    // x^{-3} --> x^(-3)\n    c = c.replace(/\\^{(-\\d+)}/g, '^($1) ');\n    // \\lambda --> lambda\n    c = c.replace(/\\\\((lambda|zeta|eta|xi|gamma|alpha|beta|delta))/g, '$1');\n    // x_{3} --> x[3]\n    c = c.replace(/_{(\\d)}/g, '[$1]');\n    // \\frac{2}{3} --> 2/3\n    c = c.replace(/\\\\frac{(\\d+)}{(\\d+)}/g, ' $1/$2 ');\n    // \\frac{expr1}{expr2} --> 2a/2b\n    c = c.replace(/\\\\frac{(.*?)}{(.*?)}/g, ' ($1)/($2) ');\n    // w_{12} --> w12(x, t)\n    c = c.replace(/(\\w)_{(\\d+)}/g, '$1$2');\n    // \\left( * \\right) -->  ( * )\n    c = c.replace(/\\\\left\\((.*?)\\\\right\\)/g, ' ( $1 ) ');\n    // \\left[ * \\right] -->  ( * )\n    c = c.replace(/\\\\left\\[(.*?)\\\\right\\]/g, ' ( $1 ) ');\n    // w_{x} --> diff(w(x), x); \n    c = c.replace(/(\\w)_{([a-z])}/g, ' diff($1($2), $2) ');\n    // ( w - v )_{x}  --> diff( w - v, x)\n    c = c.replace(/\\(([a-zA-Z0-9/+\\^-\\s]+)\\)_{([a-z])}/g, ' diff($1, $2) ');\n    // w_{12, x..x} --> diff(w12(x), x$n) n < 9\n    // w_{x..x}  --> diff(w(x), x$n), n < 10\n    // ( w - v )_{x..x}  --> diff( w - v, x$n), n < 9\n    for(let i=1; i<=8; i++) {\n      let re1 = RegExp(`(\\\\w)_{(\\\\d+),(\\\\s\\\\w){${i}}}`, 'g'),\n        re2 = RegExp(`(\\\\w)_{(\\\\w)(\\\\s\\\\w){${i}}}`, 'g'),\n        re3 = RegExp(`\\\\(([a-zA-Z0-9/+\\\\^-\\\\s]+)\\\\)_{(\\\\w)(\\\\s\\\\w){${i}}}`);\n      c = c.replace(re1, ` diff($1$2($3), $3$$${i})`);\n      c = c.replace(re2, ` diff($1($2), $2$$${i+1})`);\n      c = c.replace(re3, ` diff($1, $2$$${i+1})`);\n    }\n    // u^{+++} --> u(n+3)\n    c = c.replace(/([a-zA-Z])\\^{([+-])}/g, \"$1(n $2 1)\");\n    c = c.replace(/([a-zA-Z])\\^{([+-])[+-]{1}}/g, \"$1(n $2 2)\");\n    c = c.replace(/([a-zA-Z])\\^{([+-])[+-]{2}}/g, \"$1(n $2 3)\");\n    c = c.replace(/([a-zA-Z])\\^{([+-])[+-]{3}}/g, \"$1(n $2 4)\");\n    c = c.replace(/([a-zA-Z])\\^{([+-])[+-]{4}}/g, \"$1(n $2 5)\");\n    c = c.replace(/([a-zA-Z])\\^{([+-])[+-]{5}}/g, \"$1(n $2 6)\");\n    c = c.replace(/([a-zA-Z])\\^{([+-])[+-]{6}}/g, \"$1(n $2 7)\");\n    return c + '                     ';\n  }) )\n\n  if( type === 'matrix' ) {\n    lc = 'Matrix('\n      + JSON.stringify(lc).replace(/\"/g, '')\n      + ')';\n  } else if( type === 'array' ) {\n    lc = '['\n      + JSON.stringify(lc).replace(/(\\[|\\]|\")/g, '')\n      + ']';\n  } else {\n    lc = lc[0][0];\n  }\n  $$('input').value += '\\r\\n\\r\\n' + lc;\n}\n\nfunction typora() {\n  // 解析typora文档，支持数学公式\n  let file = $$('typora-upload').files[0];\n  if (!file.name.match(/\\.md$/)) return\n  let reader = new FileReader();\n  reader.onload = function() {\n    let result = this.result;\n    // 匹配所有数学公式，将其中</>号前后加空格，不然会被解析为html标签。\n    // 将每一个公式替换为EQUATION-id，然后使用remarkable解析md，之后在替换回来，\n    // 使用MathJax渲染。\n    let maths = result.match(/\\${1,2}(\\r\\n|.){1,}?\\${1,2}/g) || [];\n    maths = maths.map(math => {\n      result = result.replace(math, 'EQUATION-TO-REPLACE');\n      return math.replace(/(<|>)/g, ' $1 ')\n        .replace(/\\\\\\\\/g, '\\\\\\\\  ')\n        .replace(/\\\\(R|C|Z|N)([^a-zA-Z])/g, '\\\\mathbb{$1}$2')\n        .replace(/\\\\part([^i])/g, '\\\\partial$1')\n        .replace(/(^\\$\\$|\\$\\$$)/g, '$$$$$$'); // replace会把两个$$变成一个。\n    })\n\n    result = result.replace(/(\\r\\n#+.*?\\r\\n)/g, '\\r\\n$1\\r\\n');\n    result = md.render(result);\n\n    maths.forEach(math => {\n      result = result.replace('EQUATION-TO-REPLACE', math);\n    })\n\n    document.getElementById('output').innerHTML = result;\n    document.getElementById('input').value = result;\n\n    window.MathJax.Hub.Queue([\"Typeset\", window.MathJax.Hub, $$('output')]);\n  }\n  reader.readAsText(file);\n}\n\nclass Table extends React.Component {\n    state = {\n      rows: 3,\n      columns: 4,\n      display: 'none',\n    }\n\n    onTextChange = (event) => {\n      let value = Math.min( parseInt(event.target.value), 10 );\n        if( event.target.id === 'row' ) {\n            this.setState({ rows : value });\n        } else {\n            this.setState({ columns: value });\n        }\n    }\n\n    eleOnInput = (event) => {\n      renderer( event.target, $$('tip') );\n    }\n\n    eleOnBlur = (event) => {\n      event.target.innerHTML = '';\n    }\n\n    eleOnFocus = (event) => {\n      renderer( event.target, $$('tip') );\n    }\n\n    create_inputs = () => {\n      let rows = this.state.rows;\n      let columns = this.state.columns;\n      let input_rows = [];\n      for(let i=0; i<rows; i++) {\n          let input_columns = [];\n          for(let j=0; j<columns; j++) {\n              input_columns.push(\n                  <Col style={{ flex: '1' }} key={ Math.random() }>\n                      <Input className='ele' style={{ margin: '5px' }} onInput={ this.eleOnInput } onBlur={ this.eleOnBlur } onFocus={ this.eleOnFocus }/>\n                  </Col> )\n          }\n          input_rows.push( <Row style={{ display: 'flex', flexDirection: 'row' }} key={ Math.random() }>{ input_columns }</Row> )\n      }\n      return ( <InputGroup style={{ width: '98%' }}>{ input_rows }</InputGroup> );\n    }\n    \n\n    // 格式化数据\n    data_format = (str_arr) => {\n        // input: str_arr = ['1', '22', '333', '2222'];\n        // output: 1    & 22   \\\\\n        //         333  & 2222 \\\\\n        let rows = this.state.rows;\n        let columns = this.state.columns;\n        let n = Math.max( ...str_arr.map( str => str.length ) ); // 数组中字符串最大长度\n        let data = '';\n        for(let i=0; i<rows; i++) {\n            for(let j=0; j<columns - 1; j++) {\n                data += str_arr[i*columns + j].padEnd(n, ' ') + ' & ';\n            }\n            data += (str_arr[i*columns + columns - 1].padEnd(n, ' ') + ' \\\\\\\\\\r\\n');\n        }\n        return data;\n    }\n\n    // 根据输入框中内容，生成矩阵或列表\n    table2matrix = () => {\n        let eles = document.getElementsByClassName('ele');\n        let str_arr = [];\n        for(let ele of eles) {\n            str_arr.push(ele.value || '0');\n        }\n        let data = this.data_format(str_arr);\n        if( window.event.target.innerText === '生成矩阵' ) {\n            $$('input').value += ('\\r\\n$$\\r\\n\\\\left(\\r\\n\\\\begin{matrix}\\r\\n' + data + '\\\\end{matrix}\\r\\n\\\\right)\\r\\n$$');\n            renderer($$('input'), $$('output'));\n        }else {\n            let str = ''.padEnd(2*this.state.columns, '|l');\n            $$('input').value += ('\\r\\n\\\\begin{tabular}{' + str + '|}\\r\\n\\\\hline\\r\\n' + data + '\\\\hline\\r\\n\\\\end{tabular}');\n        }\n    }\n    \n    close_table = () => {\n        $$('table').style.display = 'none';\n        $$('tip').style.display = 'none';\n    }\n\n    render() {\n        let styles = {\n            table: {\n                position: 'absolute',\n                width: '540px',\n                top: '150px',\n                left: '0',\n                right: '0',\n                margin: '0 auto',\n                display: this.state.display, \n                background: 'white'\n            },\n            InputGroup: { float: 'left', maxWidth: '200px', top: '4px', left: '10px'}, \n            Button: { margin: '4px', padding: '5px 10px' }\n        }\n\n        return (\n            <Card id='table' style={ styles.table }>\n                <div id='button_container' style={{ position: 'relative', left: '0', top: '0', textAlign: 'center'}}>\n                    <InputGroup style={ styles.InputGroup }>\n                        <Row gutter={6}>\n                            <Col span={12}>\n                                <Input id='row' addonBefore='行' onChange={ this.onTextChange } value={ this.state.rows } key='100'/>\n                            </Col>\n                            <Col span={12}>\n                                <Input id='column' addonBefore='列' onChange={ this.onTextChange } value={ this.state.columns } key='101'/>\n                            </Col>\n                        </Row>\n                    </InputGroup>\n                    <ButtonGroup style={{ left: '25px' }}>\n                        <Button style={ styles.Button } onClick={ this.table2matrix } type='danger'>生成矩阵</Button>\n                        <Button style={ styles.Button } onClick={ this.table2matrix } type='default'>生成列表</Button>\n                        <Button style={ styles.Button } onClick={ this.close_table }  type='primary'>关闭</Button>\n                    </ButtonGroup>\n                </div>\n                <div id='inputs'>\n                    { this.create_inputs() }\n                </div>\n            </Card>\n        );\n    }\n}\n\n\n\n\nexport default () => {\n  const styles = {\n    left: { \n      width: '50%', \n      diaplay: 'bolck',\n      overflow: 'hidden'\n    },\n    header: {\n          height: '16%', \n          backgroundColor: 'white', \n          overflowY: 'scroll', \n          lineHeight: '20px', \n          padding: '10px',                \n    }, \n    content: { \n        backgroundColor: 'white',\n        height: '80%'\n    },\n    button: {\n      borderRadius: '3px',\n      margin: '2px',\n      padding: '5px 10px',\n    },\n    textarea: { \n      width: '100%', \n      height: '100%', \n      padding: '10px 10px', \n      outline: 'none', \n      border: 'none' \n    }, \n    output: { \n      width: '100%', \n      height: '100%', \n      background: 'white', \n      padding: '20px 40px',\n      userSelect: 'none',\n      overflowY: 'scroll',\n      userSelect: 'none',\n    },\n    footer: { \n      textAlign: 'center', \n      height: '4%',\n      padding: '3px 0' \n    }, \n    tip: {\n      position: 'absolute',\n      height: '30px',\n      top: '130px',\n      left: '0',\n      right: '0',\n      margin: '0 auto',\n      textAlign: 'center',\n      zIndex: '2',\n      display: 'none'\n    }\n  }\n  var continuous_formula = () =>{ set_input_format_latex(\"0\", \"0\") };\n  var discrete_formula = () =>{ set_input_format_latex(\"0\", \"1\") };\n  var coeff_formula = () =>{ set_input_format_latex(\"1\", \"0\") };\n  var continuous_szce_formula = () =>{ set_input_format_szce(\"0\") };\n  var discrete_szce_formula = () =>{ set_input_format_szce(\"1\") };\n  var inputOnchange = () => { renderer($$('input'), $$('output')) };\n  const btn_name = ['使用说明', '创建矩阵', 'Excel转列表', 'latex2maple', 'DT-gT', 'DT-coe', '连续公式格式化', '展式系数格式化', 'szce格式化', '离散公式格式化', '离散szce格式化', 'typora'];\n  const btn_click = [show_guide, show_table, excel2table, latex2maple, continuous_formula, coeff_formula, continuous_szce_formula, discrete_formula, discrete_szce_formula, DT_gauge, DT_coe, typora];\n  const btn_type = [\"default\", \"primary\", \"primary\", \"primary\", \"default\", \"default\", \"dashed\", \"dashed\", \"dashed\", \"danger\", \"danger\", \"primary\"];\n  const btn_arr = () => {\n    let n = btn_name.length;\n    let arr = [];\n    for( let i=0; i<n-1; i++ ) {\n      arr.push( \n        <Button\n          style={ styles.button } \n          onClick={ btn_click[i] }\n          type={ btn_type[i] } \n          key={ i }\n        >\n          { btn_name[i] }\n        </Button> \n      );\n    }\n\n    arr.push(\n      <Upload \n        beforeUpload = {btn_click[n-1]}\n        id=\"typora-upload\" >\n              <Button\n                style={ styles.button } \n                type={ btn_type[n-1] } \n                key={ n-1 }\n                icon={ <UploadOutlined /> }\n              >\n                {  btn_name[n - 1]   }\n              </Button>\n      </Upload> \n    );\n\n    return arr;\n  }\n\n    return (\n      <div>\n        <Layout>\n            <Layout id='left' style={ styles.left }>\n              <Header style={ styles.header }>\n                <div>{ btn_arr() }</div>\n              </Header>\n\n              <Divider dashed style={{ margin: '2px 0' }}/>\n\n              <Content style={ styles.content }>\n            <textarea id='input' style={ styles.textarea } onInput={ inputOnchange }>\n            </textarea>\n              </Content>\n\n              <Footer style={ styles.footer }>\n                Maple-Latex ©2019 Created by <a target=\"_blank\" href=\"https://github.com/jiandandaoxingfu/maple-latex\">JMx</a><br />\n              </Footer>\n            </Layout>\n\n            <Divider dashed style={{ margin: '0 2px' }} type='vertical' />\n\n            <Sider id='sider' width='50%' style={{ height: document.documentElement.clientHeight + 'px' }}>\n          <div id='output' style={ styles.output }></div>\n            </Sider>\n        </Layout>\n        \n        <div id='buffer' style={{ display: 'none' }}></div>\n        <div id='tip' style={ styles.tip }></div>\n        <Table />\n      </div>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}